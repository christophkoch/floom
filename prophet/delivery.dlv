% Message delivery.
% Is reliable unless the line containing "lost" is uncommented.
% Does not model latencies, but (through the get_next - next mechanism)
% Messages are delivered at most once.
% Ensures that a msg arrives *after* it is sent (in the partial order
% built up to model the world; this does not create a causal ordering). 
%
% Receiving a mesg sent by
% sent(Sender, SenderT, Receiver, MesgID, MesgParameter)
%
% Use pick_received(..) for optionally picking one if several of the same type are received at the same time.


% refine the partial order.
get_next(Sender, SenderT, Receiver) :-
    sent(Sender, SenderT, Receiver, _, _).


% do the delivery.
received(Sender, SenderT, Receiver, ReceiverT, Mesg, MParam)
% v lost(Sender, SenderT, Receiver,            Mesg, MParam)
 :- sent(Sender, SenderT, Receiver,            Mesg, MParam),
    next(Sender, SenderT, Receiver, ReceiverT).


